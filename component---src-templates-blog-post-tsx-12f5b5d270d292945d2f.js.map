{"version":3,"file":"component---src-templates-blog-post-tsx-12f5b5d270d292945d2f.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./src/components/comment.tsx","webpack://gatsby-starter-apple/./src/templates/blogPost.tsx"],"sourcesContent":["import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","import React, { useRef, useContext, useEffect } from \"react\"\n\nimport ThemeContext from \"Stores/themeContext\"\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\nimport { DARK } from \"Constants/theme\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        repo,\n        \"issue-term\": \"title\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import React from \"react\"\nimport { graphql, type PageProps } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport Comment from \"Components/comment\"\nimport { rhythm } from \"Styles/typography\"\nimport Category from \"Styles/category\"\nimport DateTime from \"Styles/dateTime\"\nimport Markdown from \"Styles/markdown\"\n\nconst BlogPost: React.FC<PageProps<Queries.Query>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category } = frontmatter!\n\n  const ogImagePath =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    thumbnail && thumbnail?.childImageSharp?.gatsbyImageData!.images!.fallback!.src\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date!}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nexport const query = graphql`\n  query BlogPostPage ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n      }\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["Category","styled","DateTime","src","LIGHT_THEME","DARK_THEME","Comment","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","_containerRef$current2","querySelector","message","type","contentWindow","_utterancesEl$content","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","_containerRef$current","appendChild","createUtterancesEl","React","ref","displayName","OuterWrapper","_ref2","device","sm","InnerWrapper","_ref3","CommentWrap","_ref4","PostCategory","Info","Time","Desc","_ref5","Divider","Title","_ref6","md","_ref7","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","ogImagePath","childImageSharp","_thumbnail$childImage","gatsbyImageData","images","fallback","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}